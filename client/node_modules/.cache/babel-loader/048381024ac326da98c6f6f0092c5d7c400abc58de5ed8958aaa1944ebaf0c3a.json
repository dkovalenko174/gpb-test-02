{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { FETCH_SERVICES_REQUEST, FETCH_SERVICES_SUCCESS, FETCH_SERVICES_FAILURE, FETCH_SERVICE_DETAILS_REQUEST, FETCH_SERVICE_DETAILS_SUCCESS, FETCH_SERVICE_DETAILS_FAILURE } from \"./actions\";\nconst initialServicesState = {\n  loading: false,\n  services: [],\n  error: null,\n  errorMessage: \"\"\n};\nexport const servicesReducer = (state = initialServicesState, action) => {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        errorMessage: \"\"\n      };\n    case FETCH_SERVICES_SUCCESS:\n      return {\n        ...state,\n        services: action.payload,\n        loading: false\n      };\n    case FETCH_SERVICES_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        errorMessage: \"Ошибка: Сервисы отсутствуют\"\n      };\n    default:\n      return state;\n  }\n};\nconst initialServiceDetailsState = {\n  service: {},\n  loading: false,\n  error: null,\n  errorMessage: \"\"\n};\nconst serviceDetailsReducer = (state = initialServiceDetailsState, action) => {\n  switch (action.type) {\n    case FETCH_SERVICE_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_SERVICE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        service: action.payload,\n        loading: false\n      };\n    case FETCH_SERVICE_DETAILS_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        errorMessage: \"Ошибка: Сервисы отсутствуют\"\n      };\n    default:\n      return state;\n  }\n};\nexport const rootReducer = combineReducers({\n  services: servicesReducer,\n  servicesDetails: serviceDetailsReducer\n});","map":{"version":3,"names":["combineReducers","FETCH_SERVICES_REQUEST","FETCH_SERVICES_SUCCESS","FETCH_SERVICES_FAILURE","FETCH_SERVICE_DETAILS_REQUEST","FETCH_SERVICE_DETAILS_SUCCESS","FETCH_SERVICE_DETAILS_FAILURE","initialServicesState","loading","services","error","errorMessage","servicesReducer","state","action","type","payload","initialServiceDetailsState","service","serviceDetailsReducer","rootReducer","servicesDetails"],"sources":["/Users/kdv/repa/gpb-test-02/client/src/redux/reducers.js"],"sourcesContent":["import { combineReducers } from \"redux\";\n\nimport {\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_SUCCESS,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICE_DETAILS_REQUEST,\n  FETCH_SERVICE_DETAILS_SUCCESS,\n  FETCH_SERVICE_DETAILS_FAILURE,\n} from \"./actions\";\n\nconst initialServicesState = {\n  loading: false,\n  services: [],\n  error: null,\n  errorMessage: \"\",\n};\n\nexport const servicesReducer = (state = initialServicesState, action) => {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        errorMessage: \"\",\n      };\n    case FETCH_SERVICES_SUCCESS:\n      return {\n        ...state,\n        services: action.payload,\n        loading: false,\n      };\n    case FETCH_SERVICES_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        errorMessage: \"Ошибка: Сервисы отсутствуют\",\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialServiceDetailsState = {\n  service: {},\n  loading: false,\n  error: null,\n  errorMessage: \"\",\n};\n\nconst serviceDetailsReducer = (state = initialServiceDetailsState, action) => {\n  switch (action.type) {\n    case FETCH_SERVICE_DETAILS_REQUEST:\n      return { ...state, loading: true, error: null };\n    case FETCH_SERVICE_DETAILS_SUCCESS:\n      return { ...state, service: action.payload, loading: false };\n    case FETCH_SERVICE_DETAILS_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        errorMessage: \"Ошибка: Сервисы отсутствуют\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  services: servicesReducer,\n  servicesDetails: serviceDetailsReducer,\n});\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAEvC,SACEC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,6BAA6B,EAC7BC,6BAA6B,EAC7BC,6BAA6B,QACxB,WAAW;AAElB,MAAMC,oBAAoB,GAAG;EAC3BC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,GAAGN,oBAAoB,EAAEO,MAAM,KAAK;EACvE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,sBAAsB;MACzB,OAAO;QACL,GAAGY,KAAK;QACRL,OAAO,EAAE,IAAI;QACbE,KAAK,EAAE,IAAI;QACXC,YAAY,EAAE;MAChB,CAAC;IACH,KAAKT,sBAAsB;MACzB,OAAO;QACL,GAAGW,KAAK;QACRJ,QAAQ,EAAEK,MAAM,CAACE,OAAO;QACxBR,OAAO,EAAE;MACX,CAAC;IACH,KAAKL,sBAAsB;MACzB,OAAO;QACL,GAAGU,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE,OAAO;QACrBR,OAAO,EAAE,KAAK;QACdG,YAAY,EAAE;MAChB,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,MAAMI,0BAA0B,GAAG;EACjCC,OAAO,EAAE,CAAC,CAAC;EACXV,OAAO,EAAE,KAAK;EACdE,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMQ,qBAAqB,GAAGA,CAACN,KAAK,GAAGI,0BAA0B,EAAEH,MAAM,KAAK;EAC5E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,6BAA6B;MAChC,OAAO;QAAE,GAAGS,KAAK;QAAEL,OAAO,EAAE,IAAI;QAAEE,KAAK,EAAE;MAAK,CAAC;IACjD,KAAKL,6BAA6B;MAChC,OAAO;QAAE,GAAGQ,KAAK;QAAEK,OAAO,EAAEJ,MAAM,CAACE,OAAO;QAAER,OAAO,EAAE;MAAM,CAAC;IAC9D,KAAKF,6BAA6B;MAChC,OAAO;QACL,GAAGO,KAAK;QACRH,KAAK,EAAEI,MAAM,CAACE,OAAO;QACrBR,OAAO,EAAE,KAAK;QACdG,YAAY,EAAE;MAChB,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAGpB,eAAe,CAAC;EACzCS,QAAQ,EAAEG,eAAe;EACzBS,eAAe,EAAEF;AACnB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}